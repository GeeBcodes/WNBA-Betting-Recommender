"""add_new_models_v6

Revision ID: 6b36a2ecfa7e
Revises: 7cdcee36b7a6
Create Date: 2025-05-16 01:31:12.926859

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # For UUID and JSONB if needed explicitly

# revision identifiers, used by Alembic.
revision: str = '6b36a2ecfa7e'
down_revision: Union[str, None] = '7cdcee36b7a6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('model_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('version_name', sa.String(), nullable=False),
    sa.Column('trained_at', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('version_name')
    )
    op.create_table('parlays',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('selections', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('combined_probability', sa.Float(), nullable=True),
    sa.Column('total_odds', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('predictions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('player_prop_odd_id', sa.UUID(), nullable=False),
    sa.Column('model_version_id', sa.UUID(), nullable=False),
    sa.Column('predicted_over_probability', sa.Float(), nullable=True),
    sa.Column('predicted_under_probability', sa.Float(), nullable=True),
    sa.Column('prediction_datetime', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['model_version_id'], ['model_versions.id'], ),
    sa.ForeignKeyConstraint(['player_prop_odd_id'], ['player_prop_odds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('predictions')
    op.drop_table('parlays')
    op.drop_table('model_versions')
    # logging.info("Skipping drop_table operations for non-existent tables during this downgrade.") # Removed logging
    # pass # Allow downgrade to complete even if tables don't exist - Removed pass
    # ### end Alembic commands ###
